name: Deploy Frontend to GitHub Pages

on:
  push:
    branches:
      - main
    paths:
      - 'client/**'
      - 'shared/**'
      - '.github/workflows/deploy-frontend.yml' # Este arquivo
      - 'package.json'
      - 'vite.config.ts'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3 # Considere atualizar para @v4 se não houver problemas de compatibilidade

      - name: Setup Node.js
        uses: actions/setup-node@v3 # Considere atualizar para @v4
        with:
          node-version: '20'
          cache: 'npm' # O cache do npm geralmente não afeta o cache interno do Vite, mas é bom ter

      - name: Install dependencies
        run: npm install # Ou 'npm ci' para builds mais determinísticos se você commita package-lock.json

      - name: Build Frontend
        env:
          VITE_API_URL: https://web-production-76420.up.railway.app
          VITE_GOOGLE_PLACES_API_KEY: ${{ secrets.VITE_GOOGLE_PLACES_API_KEY }}
        run: |
          echo "==> Iniciando build do Vite com --force..."
          # Adicionada a flag --force para garantir que o Vite não use seu cache de build interno
          # A flag --debug já estava presente e é útil para ver mais logs do Vite
          npx vite build --force --base=/Saviana/ --debug
          echo "==> Build do Vite concluído."
          
          echo "==> Verificando o conteúdo de dist/public após o build:"
          echo "Listando conteúdo de dist/public:"
          ls -R dist/public # Lista recursivamente para ver a estrutura de pastas
          
          echo "Conteúdo do index.html gerado em dist/public/index.html:"
          # Tenta imprimir as linhas relevantes do index.html gerado
          # Modificado o grep para ser mais específico para o seu caso
          if [ -f dist/public/index.html ]; then
            grep -E 'rel="stylesheet" href="/Saviana/assets/|src="/Saviana/assets/' dist/public/index.html
          else
            echo "AVISO: dist/public/index.html não encontrado."
          fi
          echo "==> Verificação do index.html e assets concluída."

      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          # O branch para o qual você quer fazer deploy (ex: gh-pages, master se for user/org page)
          branch: gh-pages
          # O diretório que você quer fazer deploy a partir do seu runner
          folder: dist/public 
          # Opcional: Limpa arquivos antigos do branch de deploy antes de adicionar novos arquivos
          # Isso pode ajudar a evitar arquivos órfãos de builds anteriores.
          # Use com cuidado, pois remove todo o histórico do branch gh-pages se não for um deploy completo.
          # Se JamesIves/github-pages-deploy-action@v4 já faz um force push por padrão (o que é comum),
          # esta opção pode ser redundante ou ter um comportamento ligeiramente diferente.
          # clean: true 

          # A action JamesIves/github-pages-deploy-action geralmente faz um force push por padrão
          # o que garante que o branch de destino reflita exatamente o conteúdo da pasta 'folder'.
